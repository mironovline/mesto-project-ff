{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/cards.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const createCard = function (\r\n  cardData,\r\n  userId,\r\n  removeCardCallback,\r\n  likeCardCallback,\r\n  openImageCallback\r\n) {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const card = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const buttonLike = card.querySelector(\".card__like-button\");\r\n  // const likeModifier = \"card__like-button_is-active\";\r\n\r\n  const cardImage = card.querySelector(\".card__image\");\r\n  const cardTitle = card.querySelector(\".card__title\");\r\n  const removeButton = card.querySelector(\".card__delete-button\");\r\n  const likesCount = card.querySelector(\".card__likes-count\");\r\n\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  cardTitle.textContent = cardData.name;\r\n  const cardID = cardData._id;\r\n  const isLiked = cardData.likes.some((like) => like._id === userId);\r\n  if (isLiked) {\r\n    buttonLike.classList.add(\"card__like-button_is-active\");\r\n  }\r\n  if (cardData.owner._id === userId) {\r\n    removeButton.addEventListener(\"click\", () =>\r\n      removeCardCallback(cardID, card)\r\n    );\r\n  } else {\r\n    removeButton.remove();\r\n  }\r\n  buttonLike.addEventListener(\"click\", () =>\r\n    likeCardCallback(cardID, buttonLike, likesCount)\r\n  );\r\n  cardImage.addEventListener(\"click\", () =>\r\n    openImageCallback(cardData.link, cardData.name)\r\n  );\r\n  return card;\r\n};\r\n","export const openModal = function (m) {\r\n  m.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keyup\", handleEscKeyUp);\r\n};\r\n\r\nconst handleEscKeyUp = (evt) => {\r\n  if (evt.key === \"Escape\") {\r\n    const popup = document.querySelector(\".popup_is-opened\"); // находим открытый попап\r\n    closeModal(popup);\r\n  }\r\n};\r\n\r\nexport const closeModal = function (m) {\r\n  m.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keyup\", handleEscKeyUp);\r\n};\r\n\r\nexport const addListeners = function (popupElement) {\r\n  const closeButton = popupElement.querySelector(\".popup__close\");\r\n  closeButton.addEventListener(\"click\", () => closeModal(popupElement));\r\n  popupElement.addEventListener(\"mousedown\", (evt) => {\r\n    if (evt.target === evt.currentTarget) closeModal(popupElement);\r\n  });\r\n};\r\n","export const validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nconst showInputError = (\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  validationConfig\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      validationConfig\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", (evt) => {\r\n      evt.preventDefault();\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = function (validationConfig) {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationConfig.formSelector)\r\n  );\r\n  formList.forEach((f) => {\r\n    setEventListeners(f, validationConfig);\r\n  });\r\n};\r\n\r\nexport const clearValidation = function (formElement, validationConfig) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  });\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = false;\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n","const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-42\",\r\n  headers: {\r\n    authorization: \"2f1d2ec8-7302-4076-abbc-c533d5817ed0\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nfunction checkResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return res.json().then((error) => {\r\n    error.httpStatusCode = res.status;\r\n    return Promise.reject(error);\r\n  });\r\n}\r\n\r\nexport const getCard = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const postCard = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      link,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const deleteCard = (cardID) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardID}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const getProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const patchProfile = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      about,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const toggleLikePromise = (cardId, isLiked) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: isLiked ? \"DELETE\" : \"PUT\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const setUserAvatar = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n","import \"./pages/index.css\";\r\nimport { createCard } from \"./components/cards\";\r\nimport { openModal, closeModal, addListeners } from \"./components/modal\";\r\nimport {\r\n  enableValidation,\r\n  clearValidation,\r\n  validationConfig,\r\n} from \"./components/validation\";\r\nimport {\r\n  getCard,\r\n  postCard,\r\n  deleteCard,\r\n  getProfile,\r\n  patchProfile,\r\n  setUserAvatar,\r\n  toggleLikePromise,\r\n} from \"./components/api\";\r\n\r\nconst cardList = document.querySelector(\".places__list\");\r\nconst popupImageContainer = document.querySelector(\".popup_type_image\");\r\nconst popupCaption = popupImageContainer.querySelector(\".popup__caption\");\r\nconst popupImage = popupImageContainer.querySelector(\".popup__image\");\r\nconst popupProfileEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupCardAdd = document.querySelector(\".popup_type_new-card\");\r\nconst popupTypeDelete = document.querySelector(\".popup_type_delete\");\r\nconst popupTypeAvatar = document.querySelector(\".popup_type_avatar\");\r\n\r\nconst cards = document.querySelector(\".places__list\");\r\n\r\nconst editButton = document.querySelector(\".profile__edit-button\");\r\nconst addButton = document.querySelector(\".profile__add-button\");\r\n\r\nconst cardFormElement = document.forms[\"new-place\"];\r\nconst cardFormButton = cardFormElement.querySelector(\".popup__button\");\r\nconst formConfirmation = document.forms[\"delete\"];\r\nconst deleteButton = formConfirmation.querySelector(\".popup__button\");\r\nconst avatarForm = document.forms[\"new__avatar\"];\r\nconst urlAvatarInput = avatarForm.elements.link;\r\nconst avatarSaveButton = avatarForm.querySelector(\".popup__button\");\r\nconst cardName = cardFormElement.elements[\"place-name\"];\r\nconst cardLink = cardFormElement.elements.link;\r\n\r\nconst profileFormElement = document.forms[\"edit-profile\"];\r\nconst nameInput = profileFormElement.elements.name;\r\nconst jobInput = profileFormElement.elements.description;\r\n\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileImage = document.querySelector(\".profile__image\");\r\n\r\nlet userId = null;\r\nlet cardForDelete = {};\r\n\r\nconst handleDeleteCard = (cardID, cardElement) => {\r\n  cardForDelete = {\r\n    id: cardID,\r\n    cardElement,\r\n  };\r\n  openModal(popupTypeDelete);\r\n};\r\n\r\nconst openImage = function (imgSrc, imgAlt) {\r\n  popupImage.src = imgSrc;\r\n  popupImage.alt = imgAlt;\r\n  popupCaption.textContent = imgAlt;\r\n  openModal(popupImageContainer);\r\n};\r\n\r\nfunction renderLoading(isLoading, buttonElement) {\r\n  if (isLoading) {\r\n    buttonElement.textContent = \"Сохранение...\";\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.textContent = \"Сохранить\";\r\n    buttonElement.disabled = false;\r\n  }\r\n}\r\n\r\nconst handleDeleteCardSubmit = (evt) => {\r\n  evt.preventDefault();\r\n  if (!cardForDelete.cardElement) return;\r\n  renderLoading(true, deleteButton);\r\n  deleteCard(cardForDelete.id)\r\n    .then(() => {\r\n      cardForDelete.cardElement.remove();\r\n      closeModal(popupTypeDelete);\r\n      cardForDelete = {};\r\n    })\r\n    .catch((err) => {\r\n      console.error(`Ошибка при удалении карточки: ${err}`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, deleteButton);\r\n    });\r\n};\r\n\r\nformConfirmation.addEventListener(\"submit\", handleDeleteCardSubmit);\r\n\r\nfunction cardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  renderLoading(true, cardFormButton);\r\n  postCard(cardName.value, cardLink.value)\r\n    .then((cardObj) => {\r\n      const card = createCard(\r\n        cardObj,\r\n        userId,\r\n        handleDeleteCard,\r\n        onLikeClick,\r\n        openImage\r\n      );\r\n      cards.prepend(card);\r\n      cardFormElement.reset();\r\n      closeModal(popupCardAdd);\r\n    })\r\n    .catch((err) => {\r\n      console.error(`Ошибка добавления карточки: ${err}`);\r\n    })\r\n    .finally(() => renderLoading(false, cardFormButton));\r\n}\r\n\r\ncardFormElement.addEventListener(\"submit\", cardFormSubmit);\r\n\r\nconst profileFormSubmit = function (evt) {\r\n  evt.preventDefault();\r\n  const name = nameInput.value;\r\n  const job = jobInput.value;\r\n  const profileTitle = document.querySelector(\".profile__title\");\r\n  profileTitle.textContent = name;\r\n  const profileDescription = document.querySelector(\".profile__description\");\r\n  profileDescription.textContent = job;\r\n  patchProfile(name, job).then((result) => {\r\n    profileTitle.textContent = result.name;\r\n    profileDescription.textContent = result.about;\r\n    closeModal(popupProfileEdit);\r\n  });\r\n};\r\n\r\nprofileFormElement.addEventListener(\"submit\", profileFormSubmit);\r\n\r\nconst editProfileImageSubmit = function (evt) {\r\n  evt.preventDefault();\r\n  renderLoading(true, avatarSaveButton);\r\n  const urlAvatar = urlAvatarInput.value;\r\n  setUserAvatar(urlAvatar)\r\n    .then((result) => {\r\n      profileImage.style.backgroundImage = `url(${result.avatar})`;\r\n      closeModal(popupTypeAvatar);\r\n    })\r\n    .catch((err) =>\r\n      console.log(`Ошибка изменения изображения пользователя: ${err}`)\r\n    )\r\n    .finally(() => renderLoading(false, avatarSaveButton));\r\n};\r\n\r\navatarForm.addEventListener(\"submit\", editProfileImageSubmit);\r\n\r\neditButton.addEventListener(\"click\", () => {\r\n  clearValidation(popupProfileEdit, validationConfig);\r\n  profileFormElement.reset();\r\n  openModal(popupProfileEdit);\r\n  nameInput.value = document.querySelector(\".profile__title\").textContent;\r\n  jobInput.value = document.querySelector(\".profile__description\").textContent;\r\n});\r\n\r\naddButton.addEventListener(\"click\", () => {\r\n  clearValidation(popupCardAdd, validationConfig);\r\n  cardFormElement.reset();\r\n  openModal(popupCardAdd);\r\n});\r\n\r\nprofileImage.addEventListener(\"click\", () => {\r\n  clearValidation(popupTypeAvatar, validationConfig);\r\n  avatarForm.reset();\r\n  openModal(popupTypeAvatar);\r\n});\r\n\r\naddListeners(popupProfileEdit);\r\naddListeners(popupCardAdd);\r\naddListeners(popupImageContainer);\r\naddListeners(popupTypeDelete);\r\naddListeners(popupTypeAvatar);\r\nenableValidation(validationConfig);\r\n\r\nconst handleLikeIconClick =\r\n  (toggleLikePromise) => (cardID, buttonLike, likesCount) => {\r\n    const isLiked = buttonLike.classList.contains(\r\n      \"card__like-button_is-active\"\r\n    ); // определяем окрашена ли уже карточка\r\n    toggleLikePromise(cardID, isLiked)\r\n      .then((cardData) => {\r\n        buttonLike.classList.toggle(\"card__like-button_is-active\");\r\n        likesCount.textContent = cardData.likes.length;\r\n      })\r\n      .catch((err) => console.log(`Ошибка изменения статуса лайка: ${err}`));\r\n  };\r\n\r\nconst onLikeClick = handleLikeIconClick(toggleLikePromise);\r\n\r\nPromise.all([getProfile(), getCard()])\r\n  .then(([user, cards]) => {\r\n    profileTitle.textContent = user.name;\r\n    profileDescription.textContent = user.about;\r\n    profileImage.style[\"background-image\"] = `url(${user.avatar})`;\r\n    userId = user._id;\r\n    cards.forEach((data) => {\r\n      const card = createCard(\r\n        data,\r\n        userId,\r\n        handleDeleteCard,\r\n        onLikeClick,\r\n        openImage\r\n      );\r\n      cardList.append(card);\r\n      const likesCount = card.querySelector(\".card__likes-count\");\r\n      likesCount.textContent = data.likes.length;\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.error(`Ошибка получения данных: ${err}`);\r\n  });\r\n"],"names":["createCard","cardData","userId","removeCardCallback","likeCardCallback","openImageCallback","card","document","querySelector","content","cloneNode","buttonLike","cardImage","cardTitle","removeButton","likesCount","src","link","alt","name","textContent","cardID","_id","likes","some","like","classList","add","owner","addEventListener","remove","openModal","m","handleEscKeyUp","evt","key","popup","closeModal","removeEventListener","addListeners","popupElement","target","currentTarget","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","concat","id","clearValidation","Array","from","querySelectorAll","forEach","toggleButtonState","inputList","buttonElement","hasInvalidInput","disabled","validity","valid","config","baseUrl","headers","authorization","checkResponse","res","ok","json","then","error","httpStatusCode","status","Promise","reject","cardList","popupImageContainer","popupCaption","popupImage","popupProfileEdit","popupCardAdd","popupTypeDelete","popupTypeAvatar","cards","editButton","addButton","cardFormElement","forms","cardFormButton","formConfirmation","deleteButton","avatarForm","urlAvatarInput","elements","avatarSaveButton","cardName","cardLink","profileFormElement","nameInput","jobInput","description","profileTitle","profileDescription","profileImage","cardForDelete","handleDeleteCard","cardElement","openImage","imgSrc","imgAlt","renderLoading","isLoading","preventDefault","fetch","method","catch","err","console","finally","value","body","JSON","stringify","cardObj","onLikeClick","prepend","reset","job","about","patchProfile","result","avatar","style","backgroundImage","log","f","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","cardId","isLiked","toggleLikePromise","contains","toggle","length","all","_ref","_ref2","user","data","append"],"sourceRoot":""}
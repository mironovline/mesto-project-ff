{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/cards.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["export const createCard = function (\r\n  cardData,\r\n  userId,\r\n  removeCardCallback,\r\n  likeCardCallback,\r\n  openImageCallback\r\n) {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const card = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const buttonLike = card.querySelector(\".card__like-button\");\r\n  // const likeModifier = \"card__like-button_is-active\";\r\n\r\n  const cardImage = card.querySelector(\".card__image\");\r\n  const cardTitle = card.querySelector(\".card__title\");\r\n  const removeButton = card.querySelector(\".card__delete-button\");\r\n  const likesCount = card.querySelector(\".card__likes-count\");\r\n\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  cardTitle.textContent = cardData.name;\r\n  const cardID = cardData._id;\r\n  const isLiked = cardData.likes.some((like) => like._id === userId);\r\n  if (isLiked) {\r\n    buttonLike.classList.add(\"card__like-button_is-active\");\r\n  }\r\n  if (cardData.owner._id === userId) {\r\n    removeButton.addEventListener(\"click\", () =>\r\n      removeCardCallback(cardID, card)\r\n    );\r\n  } else {\r\n    removeButton.remove();\r\n  }\r\n  buttonLike.addEventListener(\"click\", () =>\r\n    likeCardCallback(cardID, buttonLike, likesCount)\r\n  );\r\n  cardImage.addEventListener(\"click\", () =>\r\n    openImageCallback(cardData.link, cardData.name)\r\n  );\r\n\r\n  likesCount.textContent = cardData.likes.length;\r\n  return card;\r\n};\r\n\r\nexport const handleLikeIconClick = (toggleLikePromise) => (cardID, buttonLike, likesCount) => {\r\n    const isLiked = buttonLike.classList.contains(\r\n      \"card__like-button_is-active\"\r\n    ); // определяем окрашена ли уже карточка\r\n    toggleLikePromise(cardID, isLiked)\r\n      .then((cardData) => {\r\n        buttonLike.classList.toggle(\"card__like-button_is-active\");\r\n        likesCount.textContent = cardData.likes.length;\r\n      })\r\n      .catch((err) => console.log(`Ошибка изменения статуса лайка: ${err}`));\r\n  };","export const openModal = function (m) {\r\n  m.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keyup\", handleEscKeyUp);\r\n};\r\n\r\nconst handleEscKeyUp = (evt) => {\r\n  if (evt.key === \"Escape\") {\r\n    const popup = document.querySelector(\".popup_is-opened\"); // находим открытый попап\r\n    closeModal(popup);\r\n  }\r\n};\r\n\r\nexport const closeModal = function (m) {\r\n  m.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keyup\", handleEscKeyUp);\r\n};\r\n\r\nexport const addListeners = function (popupElement) {\r\n  const closeButton = popupElement.querySelector(\".popup__close\");\r\n  closeButton.addEventListener(\"click\", () => closeModal(popupElement));\r\n  popupElement.addEventListener(\"mousedown\", (evt) => {\r\n    if (evt.target === evt.currentTarget) closeModal(popupElement);\r\n  });\r\n};\r\n","const showInputError = (\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  validationConfig\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      validationConfig\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", (evt) => {\r\n      evt.preventDefault();\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = function (validationConfig) {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationConfig.formSelector)\r\n  );\r\n  formList.forEach((f) => {\r\n    setEventListeners(f, validationConfig);\r\n  });\r\n};\r\n\r\nexport const clearValidation = function (formElement, validationConfig) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n    inputElement.setCustomValidity(\"\");\r\n  });\r\n};\r\n\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = false;\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n","const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-42\",\r\n  headers: {\r\n    authorization: \"2f1d2ec8-7302-4076-abbc-c533d5817ed0\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nfunction checkResponse(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return res.json().then((error) => {\r\n    error.httpStatusCode = res.status;\r\n    return Promise.reject(error);\r\n  });\r\n}\r\n\r\nexport const getCard = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const postCard = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      link,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const deleteCard = (cardID) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardID}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const getProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const patchProfile = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name,\r\n      about,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const toggleLikePromise = (cardId, isLiked) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: isLiked ? \"DELETE\" : \"PUT\",\r\n    headers: config.headers,\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const setUserAvatar = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n","import \"./pages/index.css\";\r\nimport { createCard, handleLikeIconClick } from \"./components/cards\";\r\nimport { openModal, closeModal, addListeners } from \"./components/modal\";\r\nimport {\r\n  enableValidation,\r\n  clearValidation,\r\n} from \"./components/validation\";\r\nimport {\r\n  getCard,\r\n  postCard,\r\n  deleteCard,\r\n  getProfile,\r\n  patchProfile,\r\n  setUserAvatar,\r\n  toggleLikePromise,\r\n} from \"./components/api\";\r\n\r\nconst cardList = document.querySelector(\".places__list\");\r\nconst popupImageContainer = document.querySelector(\".popup_type_image\");\r\nconst popupCaption = popupImageContainer.querySelector(\".popup__caption\");\r\nconst popupImage = popupImageContainer.querySelector(\".popup__image\");\r\nconst popupProfileEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupCardAdd = document.querySelector(\".popup_type_new-card\");\r\nconst popupTypeDelete = document.querySelector(\".popup_type_delete\");\r\nconst popupTypeAvatar = document.querySelector(\".popup_type_avatar\");\r\n\r\nconst cards = document.querySelector(\".places__list\");\r\n\r\nconst editButton = document.querySelector(\".profile__edit-button\");\r\nconst addButton = document.querySelector(\".profile__add-button\");\r\n\r\nconst cardFormElement = document.forms[\"new-place\"];\r\nconst cardFormButton = cardFormElement.querySelector(\".popup__button\");\r\nconst formConfirmation = document.forms[\"delete\"];\r\nconst deleteButton = formConfirmation.querySelector(\".popup__button\");\r\nconst avatarForm = document.forms[\"new__avatar\"];\r\nconst urlAvatarInput = avatarForm.elements.link;\r\nconst avatarSaveButton = avatarForm.querySelector(\".popup__button\");\r\nconst cardName = cardFormElement.elements[\"place-name\"];\r\nconst cardLink = cardFormElement.elements.link;\r\n\r\nconst profileFormElement = document.forms[\"edit-profile\"];\r\nconst nameInput = profileFormElement.elements.name;\r\nconst jobInput = profileFormElement.elements.description;\r\nconst profileButtonSave = profileFormElement.querySelector(\".popup__button\");\r\n\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileImage = document.querySelector(\".profile__image\");\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n\r\nlet userId = null;\r\nlet cardForDelete = {};\r\n\r\nconst handleDeleteCard = (cardID, cardElement) => {\r\n  cardForDelete = {\r\n    id: cardID,\r\n    cardElement,\r\n  };\r\n  openModal(popupTypeDelete);\r\n};\r\n\r\nconst openImage = function (imgSrc, imgAlt) {\r\n  popupImage.src = imgSrc;\r\n  popupImage.alt = imgAlt;\r\n  popupCaption.textContent = imgAlt;\r\n  openModal(popupImageContainer);\r\n};\r\n\r\nfunction renderLoading(isLoading, buttonElement) {\r\n  if (isLoading) {\r\n    buttonElement.textContent = \"Сохранение...\";\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.textContent = \"Сохранить\";\r\n    buttonElement.disabled = false;\r\n  }\r\n}\r\n\r\nconst handleDeleteCardSubmit = (evt) => {\r\n  evt.preventDefault();\r\n  if (!cardForDelete.cardElement) return;\r\n  renderLoading(true, deleteButton);\r\n  deleteCard(cardForDelete.id)\r\n    .then(() => {\r\n      cardForDelete.cardElement.remove();\r\n      closeModal(popupTypeDelete);\r\n      cardForDelete = {};\r\n    })\r\n    .catch((err) => {\r\n      console.error(`Ошибка при удалении карточки: ${err}`);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, deleteButton);\r\n    });\r\n};\r\n\r\nformConfirmation.addEventListener(\"submit\", handleDeleteCardSubmit);\r\n\r\nfunction cardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  renderLoading(true, cardFormButton);\r\n  postCard(cardName.value, cardLink.value)\r\n    .then((cardObj) => {\r\n      const card = createCard(\r\n        cardObj,\r\n        userId,\r\n        handleDeleteCard,\r\n        onLikeClick,\r\n        openImage\r\n      );\r\n      cards.prepend(card);\r\n      cardFormElement.reset();\r\n      closeModal(popupCardAdd);\r\n    })\r\n    .catch((err) => {\r\n      console.error(`Ошибка добавления карточки: ${err}`);\r\n    })\r\n    .finally(() => renderLoading(false, cardFormButton));\r\n}\r\n\r\ncardFormElement.addEventListener(\"submit\", cardFormSubmit);\r\n\r\nconst profileFormSubmit = function (evt) {\r\n  evt.preventDefault();\r\n  renderLoading(true, profileButtonSave);\r\n  const name = nameInput.value;\r\n  const job = jobInput.value;\r\n  const profileTitle = document.querySelector(\".profile__title\");\r\n  profileTitle.textContent = name;\r\n  const profileDescription = document.querySelector(\".profile__description\");\r\n  profileDescription.textContent = job;\r\n  patchProfile(name, job)\r\n  .then((result) => {\r\n    profileTitle.textContent = result.name;\r\n    profileDescription.textContent = result.about;\r\n    closeModal(popupProfileEdit);\r\n  })\r\n  .catch((err) =>\r\n      console.log(`Ошибка изменения профиля пользователя: ${err}`)\r\n    )\r\n  .finally(() => renderLoading(false, profileButtonSave));\r\n};\r\n\r\nprofileFormElement.addEventListener(\"submit\", profileFormSubmit);\r\n\r\nconst editProfileImageSubmit = function (evt) {\r\n  evt.preventDefault();\r\n  renderLoading(true, avatarSaveButton);\r\n  const urlAvatar = urlAvatarInput.value;\r\n  setUserAvatar(urlAvatar)\r\n    .then((result) => {\r\n      profileImage.style.backgroundImage = `url(${result.avatar})`;\r\n      closeModal(popupTypeAvatar);\r\n    })\r\n    .catch((err) =>\r\n      console.log(`Ошибка изменения изображения пользователя: ${err}`)\r\n    )\r\n    .finally(() => renderLoading(false, avatarSaveButton));\r\n};\r\n\r\navatarForm.addEventListener(\"submit\", editProfileImageSubmit);\r\n\r\neditButton.addEventListener(\"click\", () => {\r\n  clearValidation(popupProfileEdit, validationConfig);\r\n  profileFormElement.reset();\r\n  openModal(popupProfileEdit);\r\n  nameInput.value = document.querySelector(\".profile__title\").textContent;\r\n  jobInput.value = document.querySelector(\".profile__description\").textContent;\r\n});\r\n\r\naddButton.addEventListener(\"click\", () => {\r\n  clearValidation(popupCardAdd, validationConfig);\r\n  cardFormButton.disabled = true;\r\n  cardFormButton.classList.add(validationConfig.inactiveButtonClass);\r\n  cardFormElement.reset();\r\n  openModal(popupCardAdd);\r\n});\r\n\r\nprofileImage.addEventListener(\"click\", () => {\r\n  clearValidation(popupTypeAvatar, validationConfig);\r\n  avatarSaveButton.disabled = true;\r\n  avatarSaveButton.classList.add(validationConfig.inactiveButtonClass);\r\n  avatarForm.reset();\r\n  openModal(popupTypeAvatar);\r\n});\r\n\r\naddListeners(popupProfileEdit);\r\naddListeners(popupCardAdd);\r\naddListeners(popupImageContainer);\r\naddListeners(popupTypeDelete);\r\naddListeners(popupTypeAvatar);\r\nenableValidation(validationConfig);\r\n\r\n\r\n\r\nconst onLikeClick = handleLikeIconClick(toggleLikePromise);\r\n\r\nPromise.all([getProfile(), getCard()])\r\n  .then(([user, cards]) => {\r\n    profileTitle.textContent = user.name;\r\n    profileDescription.textContent = user.about;\r\n    profileImage.style[\"background-image\"] = `url(${user.avatar})`;\r\n    userId = user._id;\r\n    cards.forEach((data) => {\r\n      const card = createCard(\r\n        data,\r\n        userId,\r\n        handleDeleteCard,\r\n        onLikeClick,\r\n        openImage\r\n      );\r\n      cardList.append(card);\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.error(`Ошибка получения данных: ${err}`);\r\n  });\r\n"],"names":["createCard","cardData","userId","removeCardCallback","likeCardCallback","openImageCallback","card","document","querySelector","content","cloneNode","buttonLike","cardImage","cardTitle","removeButton","likesCount","src","link","alt","name","textContent","cardID","_id","likes","some","like","classList","add","owner","addEventListener","remove","length","openModal","m","handleEscKeyUp","evt","key","popup","closeModal","removeEventListener","addListeners","popupElement","target","currentTarget","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","inputErrorClass","errorClass","clearValidation","Array","from","querySelectorAll","inputSelector","forEach","setCustomValidity","toggleButtonState","inputList","buttonElement","hasInvalidInput","inactiveButtonClass","disabled","validity","valid","config","baseUrl","headers","authorization","checkResponse","res","ok","json","then","error","httpStatusCode","status","Promise","reject","cardList","popupImageContainer","popupCaption","popupImage","popupProfileEdit","popupCardAdd","popupTypeDelete","popupTypeAvatar","cards","editButton","addButton","cardFormElement","forms","cardFormButton","formConfirmation","deleteButton","avatarForm","urlAvatarInput","elements","avatarSaveButton","cardName","cardLink","profileFormElement","nameInput","jobInput","description","profileButtonSave","profileTitle","profileDescription","profileImage","formSelector","submitButtonSelector","cardForDelete","handleDeleteCard","cardElement","openImage","imgSrc","imgAlt","renderLoading","isLoading","preventDefault","fetch","method","catch","err","console","finally","value","body","JSON","stringify","cardObj","onLikeClick","prepend","reset","job","about","patchProfile","result","log","avatar","style","backgroundImage","f","patternMismatch","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","cardId","isLiked","toggleLikePromise","contains","toggle","all","_ref","_ref2","user","data","append"],"sourceRoot":""}